---

sudo: required

services: docker

env:
  - DISTRIBUTION: ubuntu
    DISTRIBUTION_VERSION: 16.04
    ANSIBLE_VERSION: 2.4.0.0
    PACKAGE_MANAGER: apt
    DOCKER_INIT: /lib/systemd/systemd
    DCS: etcd
  - DISTRIBUTION: centos
    DISTRIBUTION_VERSION: 7
    ANSIBLE_VERSION: 2.4.0.0
    PACKAGE_MANAGER: yum
    DOCKER_INIT: /usr/lib/systemd/systemd
    DCS: consul

before_install:
  - |
    set -e
  
    sudo modprobe softdog
    docker run -d -v "${PWD}/tests":/tmp/tests -v /sys/fs/cgroup:/sys/fs/cgroup:ro --name="${DISTRIBUTION}-${DISTRIBUTION_VERSION}" --privileged ${DISTRIBUTION}:${DISTRIBUTION_VERSION} ${DOCKER_INIT}
    sleep 1
    docker exec ${DISTRIBUTION}-${DISTRIBUTION_VERSION} true
    
    if [[ ${DISTRIBUTION} == "ubuntu" ]]; then
      PACKAGES="python-dev python-pip git curl"
    elif [[ ${DISTRIBUTION} == "centos" ]]; then
      docker exec -t ${DISTRIBUTION}-${DISTRIBUTION_VERSION} \
      /bin/sh -c "${PACKAGE_MANAGER} install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-${DISTRIBUTION_VERSION}.noarch.rpm https://download.postgresql.org/pub/repos/yum/9.6/redhat/rhel-${DISTRIBUTION_VERSION}-`uname -m`/pgdg-centos96-9.6-3.noarch.rpm";
      PACKAGES="python-devel gcc python-pip git curl iproute"
    fi

install:
  - docker exec -t ${DISTRIBUTION}-${DISTRIBUTION_VERSION} /bin/sh -c "${PACKAGE_MANAGER} update -y -q && ${PACKAGE_MANAGER} install ${PACKAGES} -y && pip install --upgrade pip && pip install ansible==${ANSIBLE_VERSION} netaddr"
  - docker exec -t ${DISTRIBUTION}-${DISTRIBUTION_VERSION} /bin/sh -c "ansible --version"

script:
  - docker exec -t ${DISTRIBUTION}-${DISTRIBUTION_VERSION} /bin/sh -c "ansible-galaxy install -r /tmp/tests/requirements.yml"
  - docker exec -t ${DISTRIBUTION}-${DISTRIBUTION_VERSION} /bin/sh -c "ansible-playbook -i /tmp/tests/inventory /tmp/tests/test.yml --syntax-check"
  - docker exec -t ${DISTRIBUTION}-${DISTRIBUTION_VERSION} /bin/sh -c "ansible-playbook -i /tmp/tests/inventory /tmp/tests/test.yml -Dvv --extra-vars patroni_dcs=$DCS"
  - sleep 10
  - docker exec -t ${DISTRIBUTION}-${DISTRIBUTION_VERSION} /bin/sh -c "patronictl -c /etc/patroni/*.yml list main"
  - set +e
  - docker exec --user=postgres -t ${DISTRIBUTION}-${DISTRIBUTION_VERSION} /bin/sh -c "psql -Atc \"SELECT 1\""

after_success:
  - docker rm -f ${DISTRIBUTION}-${DISTRIBUTION_VERSION}

after_failure:
  - docker exec -t ${DISTRIBUTION}-${DISTRIBUTION_VERSION} /bin/sh -c "journalctl -u $DCS -u patroni -n100 --no-pager"
  - docker rm -f ${DISTRIBUTION}-${DISTRIBUTION_VERSION}
