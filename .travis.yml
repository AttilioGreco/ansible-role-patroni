---

sudo: required

services: docker

env:
#  - DISTRIBUTION: ubuntu
#    DISTRIBUTION_VERSION: 16.04
#    ANSIBLE_VERSION: 2.4.0.0
#    PACKAGE_MANAGER: apt
#    DOCKER_INIT: /lib/systemd/systemd
#    DCS: etcd
  - DISTRIBUTION: centos
    DISTRIBUTION_VERSION: 7
    ANSIBLE_VERSION: 2.4.0.0
    PACKAGE_MANAGER: yum
    DOCKER_INIT: /usr/lib/systemd/systemd
    DCS: consul

before_install:
  - |
    set -e
  
    sudo modprobe softdog
    docker run -d -v "${PWD}/tests":/tmp/tests -v /sys/fs/cgroup:/sys/fs/cgroup:ro --name="${DISTRIBUTION}-${DISTRIBUTION_VERSION}" --privileged ${DISTRIBUTION}:${DISTRIBUTION_VERSION} ${DOCKER_INIT}
    sleep 1
    docker exec ${DISTRIBUTION}-${DISTRIBUTION_VERSION} true
    
    if [[ ${DISTRIBUTION} == "ubuntu" ]]; then
      PACKAGES="python-pip git curl"
      docker exec -t ${DISTRIBUTION}-${DISTRIBUTION_VERSION} \
      /bin/sh -c "( ${PACKAGE_MANAGER} -qq update && ${PACKAGE_MANAGER} -qq install -y postgresql-common )> /dev/null && sed -i 's/#start_conf = 'auto'/start_conf = 'manual'/g' /etc/postgresql-common/createcluster.conf"
    elif [[ ${DISTRIBUTION} == "centos" ]]; then
      docker exec -t ${DISTRIBUTION}-${DISTRIBUTION_VERSION} \
      /bin/sh -c "( ${PACKAGE_MANAGER} -q install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-${DISTRIBUTION_VERSION}.noarch.rpm https://download.postgresql.org/pub/repos/yum/9.6/redhat/rhel-${DISTRIBUTION_VERSION}-`uname -m`/pgdg-centos96-9.6-3.noarch.rpm )> /dev/null";
      PACKAGES="python-devel gcc python-pip git curl iproute"
    fi

install:
  - docker exec -t ${DISTRIBUTION}-${DISTRIBUTION_VERSION} /bin/sh -c "{ ${PACKAGE_MANAGER} -q update -y && ${PACKAGE_MANAGER} -q install ${PACKAGES} -y } > /dev/null && pip install --upgrade pip -q && pip install ansible==${ANSIBLE_VERSION} netaddr -q"
  - docker exec -t ${DISTRIBUTION}-${DISTRIBUTION_VERSION} /bin/sh -c "ansible --version"

script:
  - docker exec -t ${DISTRIBUTION}-${DISTRIBUTION_VERSION} /bin/sh -c "ansible-galaxy install -r /tmp/tests/requirements.yml"
  - docker exec -t ${DISTRIBUTION}-${DISTRIBUTION_VERSION} /bin/sh -c "ansible-playbook -i /tmp/tests/inventory /tmp/tests/test.yml --syntax-check"
  - docker exec -t ${DISTRIBUTION}-${DISTRIBUTION_VERSION} /bin/sh -c "ansible-playbook -i /tmp/tests/inventory /tmp/tests/test.yml -Dvv --extra-vars patroni_dcs=$DCS"
  - sleep 15

after_success:
  - docker exec -t ${DISTRIBUTION}-${DISTRIBUTION_VERSION} /bin/sh -c "patronictl -c /etc/patroni/*.yml list main"
  - docker exec --user=postgres -t ${DISTRIBUTION}-${DISTRIBUTION_VERSION} /bin/sh -c "psql -Atc \"SELECT 1\""
  - docker rm -f ${DISTRIBUTION}-${DISTRIBUTION_VERSION}

after_failure:
  - docker exec -t ${DISTRIBUTION}-${DISTRIBUTION_VERSION} /bin/sh -c "journalctl -u $DCS -u patroni -n1000 --no-pager"
  - docker rm -f ${DISTRIBUTION}-${DISTRIBUTION_VERSION}

notifications:
  webhooks: https://galaxy.ansible.com/api/v1/notifications/  