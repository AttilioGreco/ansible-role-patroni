---
#services: docker
os: linux
dist: trusty
sudo: required
language: python

env:
  - DISTRIBUTION=ubuntu DISTRIBUTION_VERSION=16.04 ANSIBLE_VERSION=2.4 DCS=etcd

install:
  - sudo pip install setuptools docker-compose yamllint ansible==${ANSIBLE_VERSION} --upgrade -q > /dev/null
  - docker-compose -f tests/${DISTRIBUTION}-${DISTRIBUTION_VERSION}-compose.yml -f tests/${DCS}-compose.yml up -d
  - docker ps -a

script:
#  - find . -name "*.yml" -type f | xargs yamllint
  - ansible-galaxy install -r tests/requirements.yml
  - ansible-playbook -i tests/hosts tests/patroni.yml --syntax-check
  - ANSIBLE_CONFIG=tests/ansible.cfg ansible-playbook -i tests/hosts tests/patroni.yml -Dvv --limit ${DISTRIBUTION}-${DISTRIBUTION_VERSION} --extra-vars patroni_dcs=${DCS}

after_success:
  - docker exec -t ${DISTRIBUTION}-${DISTRIBUTION_VERSION} /bin/sh -c "patronictl -c /etc/patroni/*.yml list main"
  - docker exec --user=postgres -t ${DISTRIBUTION}-${DISTRIBUTION_VERSION} /bin/sh -c "psql -Atc \"SELECT 1\""
  - docker rm -f ${DISTRIBUTION}-${DISTRIBUTION_VERSION}

after_failure:
  - docker exec -t ${DISTRIBUTION}-${DISTRIBUTION_VERSION} /bin/sh -c "journalctl -u $DCS -u patroni -n1000 --no-pager"
  - docker rm -f ${DISTRIBUTION}-${DISTRIBUTION_VERSION}